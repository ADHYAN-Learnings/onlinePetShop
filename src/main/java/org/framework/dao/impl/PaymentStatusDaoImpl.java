package org.framework.dao.impl;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import org.framework.beans.PaymentStatusBeans;
import org.framework.dao.DaoActions;
import org.framework.dao.HibernateDao;
import org.framework.entity.PaymentStatus;
import org.framework.entity.PaymentUserMapping;
import org.framework.entity.Pet;
import org.framework.entity.User;
import org.framework.functionalInterfaceImplementation.AccessLoginUserName;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


@Repository("paymentStatus")
public class PaymentStatusDaoImpl extends HibernateDao<PaymentStatusBeans> implements DaoActions<PaymentStatusBeans> {

	@Autowired
	 AccessLoginUserName accessLoginUserName;
	
	@Override
	public PaymentStatusBeans add(PaymentStatusBeans obj) {
		return null;
	}

	@Override
	public PaymentStatusBeans update(PaymentStatusBeans obj) {
		//Step 1:Access the Login username Id
		  int UserId = getLoginUserName();
		  logger.debug("::37:::PaymentStatusDaoImpl::getLoginUserName::UserId:::"+UserId);
		//Step 2: save the data in a database and access the autoGenerated Id
          int payment_status_id = savePaymentDetails(obj);
          
        //Step 3:Save the data in a mapping table between user,product and payment transaction details
          saveMappingData(payment_status_id,UserId,obj);
          
        //Step 4:Disable the product status which are sold
          ProductStatusChange(obj);
		return obj;
	}

	@Override
	public PaymentStatusBeans remove(PaymentStatusBeans obj) {
		return null;
	}

	@Override
	public PaymentStatusBeans get(PaymentStatusBeans obj) {
		return obj;
	}
	
	/*Step:1 Access the Login username Id */
	private int getLoginUserName() {
		/*AccessLoginUserName accessLoginUserName = new AccessLoginUserName();*/
		String username = accessLoginUserName.getLoginUsername();
	    logger.debug("::PaymentStatusDaoImpl::getLoginUserName()::username:::"+username);
		int result = 0;
		try {
			CriteriaBuilder criteriaBuilder = currentSession().getCriteriaBuilder();
			CriteriaQuery<Integer> query = criteriaBuilder.createQuery(Integer.class);
			
			Root<User> user = query.from(User.class);
		    query.select(user.get("userId")).where(criteriaBuilder.equal(user.get("userName"), username));
		    
		    result = currentSession().createQuery(query).getSingleResult();
		    System.out.println(":::result::::"+result);
		    
		} catch(Exception ex) {
			ex.printStackTrace();
		}
		return result;
	}
	
	/*Step:2  saving the Payment details in a database  */
	private int savePaymentDetails(PaymentStatusBeans obj) {
		if(logger.isDebugEnabled()) {
			logger.debug("::::savePaymentDetails::::"+obj.toString());	
		}
		PaymentStatus entity = new PaymentStatus();
		
		entity.setPaymentType(obj.getPaymentType());
		entity.setAccountNumber(obj.getAccountNumber());
		entity.setCardHolderName(obj.getCardHolderName());
		entity.setPaymentStatus("Paid");
		currentSession().save(entity);
		
		return entity.getPaymentStatusId();
	}
	
	/*Step:3 Save the data in a mapping table between user,product and payment transaction details */
	  private void saveMappingData(int payment_status_id,int user_Id, PaymentStatusBeans obj) {
          if(logger.isDebugEnabled()) {
        	  logger.debug("::::savePaymentDetails::::"+obj.toString());
          }
		  PaymentUserMapping paymentUserMappingEntity = new PaymentUserMapping();
		  PaymentStatus paymentStatusEntity = new PaymentStatus(); 
		  Pet petEntity = new Pet();
		  User userEntity = new User();
		
		  petEntity.setId(obj.getPetId());
		  paymentStatusEntity.setPaymentStatusId(payment_status_id);
		  userEntity.setUserId(user_Id);
		  
		  paymentUserMappingEntity.setPet(petEntity);
		  paymentUserMappingEntity.setPaymentStatus(paymentStatusEntity);
		  paymentUserMappingEntity.setUser(userEntity);
		  
		  currentSession().saveOrUpdate(paymentUserMappingEntity);
	}
	  
	//Step 4:Disable the product status which are sold
	private void ProductStatusChange(PaymentStatusBeans obj) {
     if(logger.isDebugEnabled()) {
    	 logger.debug("::::::ProductStatusChange:::"+obj.toString());
     }
	 Pet petEntity = currentSession().load(Pet.class, new Integer(obj.getPetId()));
	 petEntity.setStatus("Sold");
	 currentSession().saveOrUpdate(petEntity);
	}

	@Override
	public PaymentStatusBeans getAll(PaymentStatusBeans obj) {
		// TODO Auto-generated method stub
		return null;
	}

}