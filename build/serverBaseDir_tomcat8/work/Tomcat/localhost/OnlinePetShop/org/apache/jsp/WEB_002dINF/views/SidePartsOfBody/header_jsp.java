/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2018-06-17 17:23:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.SidePartsOfBody;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("    <div  class=\"row header fixed-top\">\r\n");
      out.write("      <div class=\"col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1\"></div>\r\n");
      out.write("      <div class=\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4\"></div>\r\n");
      out.write("      <div class=\"col-3 col-sm-3 col-md-3 col-lg-3 col-xl-3\"></div>\r\n");
      out.write("      <div class=\"col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2\"></div>\r\n");
      out.write("      <div class=\"col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2\">\r\n");
      out.write("         <nav class=\"navbar navbar-expand-sm navbar-dark\">\r\n");
      out.write("           <ul class=\"navbar-nav\">\r\n");
      out.write("             <li class=\"nav-item\">\r\n");
      out.write("               <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath() );
      out.write("\">Home</a>\r\n");
      out.write("             </li>\r\n");
      out.write("             <li class=\"nav-item\">\r\n");
      out.write("               <a class=\"nav-link\" data-toggle=\"modal\" id=\"loginlink\">Login</a>\r\n");
      out.write("             </li>\r\n");
      out.write("             <li class=\"nav-item\">\r\n");
      out.write("               <a class=\"nav-link\" data-toggle=\"modal\" id=\"logoutLink\">Logout</a>\r\n");
      out.write("             </li>\r\n");
      out.write("           </ul>\r\n");
      out.write("         </nav>\r\n");
      out.write("     </div></div>\r\n");
      out.write("     ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../views/body/Login.jsp", out, false);
      out.write("\r\n");
      out.write("     ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../views/body/new_user_details.jsp", out, false);
      out.write("\r\n");
      out.write("     \r\n");
      out.write("     <script type=\"text/javascript\">\r\n");
      out.write("     /*when use will click the Login link or want to buy something and user is not logged in then for sign in popup displaying  */\r\n");
      out.write("         $(document).ready(function(){\r\n");
      out.write("\t        $(\"#loginlink\").click(function(){\r\n");
      out.write("\t\t    $(\"#login\").modal(); \r\n");
      out.write("\t     });\r\n");
      out.write("\t  \r\n");
      out.write("     /* when user will click the new to pet shop button then to close the log in pop up and open user details popup */\t  \r\n");
      out.write("\t    $(\"#newUserLogin\").click(function(){\r\n");
      out.write("\t\t\t $(\"#login\").modal(\"hide\");\r\n");
      out.write("\t\t\t $(\"#newUserDetails\").modal();\r\n");
      out.write("\t\t });\r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("          $(\"#logoutLink\").click(function(e){\r\n");
      out.write("        \t e.preventDefault();\r\n");
      out.write("        \t \r\n");
      out.write("      \t\t$.ajax({\r\n");
      out.write("\t \t\t\ttype:\"GET\",\r\n");
      out.write("\t \t\t\turl:\"");
      out.print(request.getContextPath() );
      out.write("/logout\",\r\n");
      out.write("\t \t\t\tsuccess:function(){\r\n");
      out.write("\t \t\t\t\t$.gritter.add({\r\n");
      out.write("\t \t \t\t\t\ttitle :\"Logout Successfully :)\",\r\n");
      out.write("\t \t \t\t\t\tfade_in_speed:\"medium\",\r\n");
      out.write("\t \t \t\t\t\tfade_out_speed:500\r\n");
      out.write("\t \t \t\t\t});\r\n");
      out.write("\t \t\t\t\twindow.location=\"/OnlinePetShop/\";\r\n");
      out.write("\t \t\t\t},\r\n");
      out.write("\t \t\t\terror:function(){\r\n");
      out.write("\t \t\t\t\t$.gritter.add({\r\n");
      out.write("\t \t \t\t\t\ttitle :\"Logout Failed :)\",\r\n");
      out.write("\t \t \t\t\t\ttext  :\"Please try again\",\r\n");
      out.write("\t \t \t\t\t\tfade_in_speed:\"medium\",\r\n");
      out.write("\t \t \t\t\t\tfade_out_speed:500 \r\n");
      out.write("\t \t \t\t\t});\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t \t\t});\r\n");
      out.write("         }); \r\n");
      out.write("      });\r\n");
      out.write("  </script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
